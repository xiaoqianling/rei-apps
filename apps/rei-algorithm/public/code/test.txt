var detectCycle = function(head) {
    let fast, slow;
    fast = slow = head;
    // @visualize color slow #99CCFF
    // @visualize color fast #99CC66
    while (fast != null && fast.next != null) {
        slow = slow.next;
        fast = fast.next.next;
        // 点击下面这一行代码，即可看到快慢指针追逐相遇
        if (fast == slow) break;
    }

    if (fast == null || fast.next == null) {
        // fast 遇到空指针说明没有环
        return null;
    }

    // 重新指向头结点
    slow = head;
    // 点击下面这一行代码，即可看到快慢指针同步前进，相交点就是环起点
    while (slow != fast) {
        fast = fast.next;
        slow = slow.next;
    }
    return slow;
};

let head = LinkedList.createCyclicHead([1,3,5,7,2,4], 2)
let result = detectCycle(head)